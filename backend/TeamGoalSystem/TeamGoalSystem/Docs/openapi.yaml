openapi: 3.0.0
info:
  title: TeamGoalSystem API
  description: API for managing teams, members, and goals within the TeamGoalSystem
  version: 1.0.0

servers:
  - url: https://api.teamgoalsystem.com/v1

paths:
  /teams:
    get:
      summary: Get a list of all teams
      tags:
        - team
      operationId: getAllTeams
      responses:
        "200":
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
    post:
      summary: Create a new team
      tags:
        - team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeam"
      responses:
        "201":
          description: Team created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad request
        "422":
          $ref: "#/components/responses/unprocessableEntity"

  /teams/{teamId}:
    parameters:
      - $ref: '#/components/parameters/teamId'
    get:
      summary: Get a team by ID
      tags:
        - team
      operationId: getTeamById
      responses:
        "200":
          description: A single team
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          $ref: "#/components/responses/notFound"
    put:
      summary: Update a team by ID
      tags:
        - team
      operationId: updateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeam"
      responses:
        "200":
          description: Team updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          $ref: "#/components/responses/notFound"
        "400":
          description: Bad request
        "422":
          $ref: "#/components/responses/unprocessableEntity"
    delete:
      summary: Delete a team by ID
      tags:
        - team
      operationId: deleteTeam
      responses:
        "204":
          description: Team deleted
        "404":
          $ref: "#/components/responses/notFound"

  /teams/{teamId}/members:
    parameters:
      - $ref: '#/components/parameters/teamId'
    get:
      summary: Get members of a team
      tags:
        - member
      operationId: getAllTeamMembers
      responses:
        "200":
          description: A list of team members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Member"
        "404":
          $ref: "#/components/responses/notFound"
    post:
      summary: Add a new member to the team
      tags:
        - member
      operationId: createTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMember"
      responses:
        "201":
          description: Member created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
        "400":
          description: Bad request
        "404":
          $ref: "#/components/responses/notFound"
        "422":
          $ref: "#/components/responses/unprocessableEntity"

  /teams/{teamId}/members/{memberId}:
    parameters:
      - $ref: '#/components/parameters/teamId'
      - $ref: '#/components/parameters/memberId'
    get:
      summary: Get a specific team member by ID
      tags:
        - member
      operationId: getTeamMemberById
      responses:
        "200":
          description: A single team member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
        "404":
          $ref: "#/components/responses/notFound"
    put:
      summary: Update a team member by ID
      tags:
        - member
      operationId: updateTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMember"
      responses:
        "200":
          description: Member updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Member"
        "404":
          $ref: "#/components/responses/notFound"
        "400":
          description: Bad request
        "422":
          $ref: "#/components/responses/unprocessableEntity"
    delete:
      summary: Delete a member from the team by ID
      tags:
        - member
      operationId: deleteTeamMember
      responses:
        "204":
          description: Member deleted
        "404":
          $ref: "#/components/responses/notFound"

  /teams/{teamId}/members/{memberId}/goals:
    parameters:
      - $ref: '#/components/parameters/teamId'
      - $ref: '#/components/parameters/memberId'
    get:
      summary: Get all goals for a team member
      tags:
        - goal
      operationId: getAllTeamMemberGoals
      responses:
        "200":
          description: A list of team member goals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Goal"
        "404":
          $ref: "#/components/responses/notFound"
    post:
      summary: Add a new goal to a team member
      tags:
        - goal
      operationId: createTeamMemberGoal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGoal"
      responses:
        "201":
          description: Goal created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Goal"
        "400":
          description: Bad request
        "404":
          $ref: "#/components/responses/notFound"
        "422":
          $ref: "#/components/responses/unprocessableEntity"

  /teams/{teamId}/members/{memberId}/goals/{goalId}:
    parameters:
      - $ref: '#/components/parameters/teamId'
      - $ref: '#/components/parameters/memberId'
      - $ref: '#/components/parameters/goalId'
    get:
      summary: Get a specific goal for a team member by ID
      tags:
        - goal
      operationId: getTeamMemberGoalById
      responses:
        "200":
          description: A single goal
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Goal"
        "404":
          $ref: "#/components/responses/notFound"
    put:
      summary: Update a goal for a team member by ID
      tags:
        - goal
      operationId: updateTeamMemberGoal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGoal"
      responses:
        "200":
          description: Goal updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Goal"
        "404":
          $ref: "#/components/responses/notFound"
        "400":
          description: Bad request
        "422":
          $ref: "#/components/responses/unprocessableEntity"
    delete:
      summary: Delete a goal from a team member by ID
      tags:
        - goal
      operationId: deleteTeamMemberGoal
      responses:
        "204":
          description: Goal deleted
        "404":
          $ref: "#/components/responses/notFound"

components:
  schemas:
    problemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    Team:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        office:
          type: string
        division:
          type: string
        teamLeaderName:
          type: string
        created:
          type: string
          format: date-time

    CreateTeam:
      type: object
      required:
        - title
        - office
        - division
        - teamLeaderName
      properties:
        title:
          type: string
        office:
          type: string
        division:
          type: string
        teamLeaderName:
          type: string

    UpdateTeam:
      type: object
      properties:
        title:
          type: string
        office:
          type: string
        division:
          type: string
        teamLeaderName:
          type: string

    Member:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        role:
          type: string
        email:
          type: string
        joinDate:
          type: string
          format: date-time

    CreateMember:
      type: object
      required:
        - name
        - surname
        - role
        - email
      properties:
        name:
          type: string
        surname:
          type: string
        role:
          type: string
        email:
          type: string
        joinDate:
          type: string
          format: date-time

    UpdateMember:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        role:
          type: string
        email:
          type: string
        joinDate:
          type: string
          format: date-time

    Goal:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        createdDate:
          type: string
          format: date-time
        finishDate:
          type: string
          format: date-time
        isCompleted:
          type: boolean

    CreateGoal:
      type: object
      required:
        - title
        - description
        - finishDate
      properties:
        title:
          type: string
        description:
          type: string
        finishDate:
          type: string
          format: date-time
        isCompleted:
          type: boolean

    UpdateGoal:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        finishDate:
          type: string
          format: date-time
        isCompleted:
          type: boolean

  responses:
    notFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: "Resource not found"

    unprocessableEntity:
      description: Unprocessable Entity - Validation errors
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problemDetails"
          example:
            type: "https://example.com/probs/validation"
            title: "Unprocessable Entity"
            status: 422
            detail: "Validation failed"
            errors:
              title:
                - "Title is required."
              description:
                - "Description must be at least 3 characters long."

  parameters:
    teamId:
      name: teamId
      in: path
      required: true
      schema:
        type: integer
      description: The unique identifier of the team

    memberId:
      name: memberId
      in: path
      required: true
      schema:
        type: integer
      description: The unique identifier of the member

    goalId:
      name: goalId
      in: path
      required: true
      schema:
        type: integer
      description: The unique identifier of the goal
    

tags:
  - name: team
    description: Operations related to teams
  - name: member
    description: Operations related to team members
  - name: goal
    description: Operations related to team member goals
